[
  {
    "category": "company",
    "path": "web",
    "id": 1,
    "title": "스펙토리 포털 페이지 구축 및 고도화",
    "description": "초·중·고등학생 및 일반인, 기업 대상의 공모전 정보 제공 포털로, 다양한 교육/이벤트 콘텐츠를 통합 관리할 수 있도록 구축된 반응형 웹 기반 포털 플랫폼입니다.",
    "tech_stack": {
      "frontend": ["HTML5", "CSS3", "JavaScript", "JQuery"],
      "backend": ["PHP", "Twig Template Engine"],
      "database": ["MYSQL"],
      "environment": ["Apache"]
    },
    "features": [
      "공모전 정보 등록/조회/수정",
      "이벤트, 공지사항, 수상작 갤러리",
      "실시간 사용자 접속 통계",
      "관리자 페이지 연동 기반 자동화 처리"
    ],
    "contribution": {
      "design": [
        "플랫폼 설계 및 UI/UX 개선",
        "사용자 접근성을 고려한 정보 구조 재정비",
        "메인 페이지 및 서브 페이지 레이아웃 디자인 개선"
      ],
      "development": [
        "실시간 사용자 데이터 연동 (PHP + Twig)",
        "관리자 페이지와 연동하여 공모전/회원/접속 데이터 자동 반영",
        "공모전 콘텐츠 실시간 업데이트 기능 구현"
      ],
      "optimization": [
        "모바일 최적화 구현",
        "모바일에서도 원활한 이용이 가능하도록 반응형 구조 적용",
        "별도의 앱 없이 브라우저 환경에서 자연스러운 UX 제공"
      ]
    },
    "mainImg": "/images/spt_web_main.png",
    "mockupImg": "/images/spt_web_mockup.png",
    "year" : 2023,
    "state" : "완료"
  },
  {
    "category": "company",
    "path": "admin",
    "id": 2,
    "title": "스펙토리 플랫폼 시스템 구축 및 고도화",
    "description": "주최기관과 대행사가 손쉽게 공모전 관련 홈페이지를 생성하고, 접수·심사·투표·게시판·갤러리 기능을 통합 운영할 수 있는 멀티 기능형 플랫폼입니다.",
    "tech_stack": {
      "frontend": ["HTML5", "CSS3", "JavaScript", "JQuery"],
      "backend": ["PHP", "Twig Template Engine"],
      "database": ["MYSQL"],
      "environment": ["Apache"]
    },
    "features": [
      "홈페이지 생성 및 템플릿 관리",
      "접수 페이지 자동 생성 및 접수 정보 통계 제공",
      "심사·투표 페이지 관리 및 결과 확인 기능",
      "게시판·갤러리 등 콘텐츠 관리 기능",
      "권한에 따른 관리자/운영자/마스터 사용자 구분 기능",
      "통합 대시보드를 통한 플랫폼 전체 흐름 제어"
    ],
    "contribution": {
      "design": [
        "플랫폼 전반의 구조 설계 및 UI/UX 개선",
        "권한 및 사용자 흐름을 고려한 인터페이스 설계",
        "접수/심사/투표 기능 중심의 레이아웃 구성"
      ],
      "development": [
        "PHP + Twig 기반 관리자 시스템 기능 개발",
        "사용자·운영자·마스터 관리자의 권한 분리 및 기능 제어 구현",
        "접수/심사/투표/홈페이지 기능을 통합한 관리자 플랫폼 구축",
        "심사 결과 집계 자동화 및 통계 시각화 기능 추가"
      ],
      "optimization": [
        "모든 디바이스에 최적화된 반응형 레이아웃 구성",
        "관리자 페이지 내 데이터 흐름 최적화 및 사용성 개선",
        "무설치 웹 기반 환경에서 즉시 사용 가능한 UX 구현"
      ]
    },
    "mainImg": "/images/spt_admin_main.png",
    "mockupImg": "/images/spt_admin_mockup.png",
    "year": 2024,
    "state": "완료"
  },
  {
    "category": "company",
    "path": "contest",
    "id": 3,
    "title": "스펙토리 플랫폼 시스템 구축 및 고도화",
    "description": "주최 측에서 빌더 플랫폼을 통해 생성한 홈페이지를 기반으로, 사용자가 직접 접수하고 투표에 참여하며, 공지사항, 수상작 갤러리 등 주요 정보를 한눈에 확인할 수 있는 공모전 전용 플랫폼입니다.",
    "tech_stack": {
      "frontend": ["HTML5", "CSS3", "JavaScript", "JQuery"],
      "backend": ["PHP", "Twig Template Engine"],
      "database": ["MYSQL"],
      "environment": ["Apache"]
    },
    "features": [
      "공모전별 전용 접수 홈페이지 자동 생성",
      "참가자 온라인 접수 기능 (파일, 이미지 등 업로드 포함)",
      "심사 및 투표 참여 기능 제공",
      "수상작 확인을 위한 갤러리 및 결과 페이지 제공",
      "공지사항, 일정, 문의 등 사용자용 정보 확인 가능",
      "모바일 최적화된 사용자 경험 제공"
    ],
    "contribution": {
      "design": [
        "사용자 중심의 직관적인 접수 흐름 UI 설계",
        "투표 및 갤러리 페이지의 시각적 가독성 강화",
        "PC/모바일 모두 고려한 반응형 인터페이스 구성"
      ],
      "development": [
        "사용자가 직접 접수, 결과 확인이 가능한 클라이언트 구조 개발",
        "파일 업로드, 다단계 입력 폼 등 사용자 편의 기능 구현",
        "공모전별 커스터마이징이 가능한 템플릿 기반 빌더 연동"
      ],
      "optimization": [
        "최적화된 라우팅 및 비동기 처리로 사용자 응답속도 개선",
        "다양한 브라우저 및 디바이스에서 호환성 검증",
        "비회원 사용자도 쉽게 접근 가능한 UX 구성"
      ]
    },
    "mainImg": "/images/spt_contest_main.png",
    "mockupImg": "/images/spt_contest_mockup.png",
    "year": 2024,
    "state": "완료"
  },
  {
    "category": "company",
    "path": "simsa",
    "id": 4,
    "title": "스펙토리 플랫폼 시스템 구축 및 고도화",
    "description": "빌더 플랫폼에서 생성된 공모전 사이트 내 심사 페이지는 심사위원이 로그인 후 작품을 평가하고 점수를 입력할 수 있도록 구성되어 있으며, 심사 결과는 자동으로 집계되어 실시간으로 반영됩니다.",
    "tech_stack": {
      "frontend": ["HTML5", "CSS3", "JavaScript", "JQuery"],
      "backend": ["PHP", "Twig Template Engine"],
      "database": ["MYSQL"],
      "environment": ["Apache"]
    },
    "features": [
      "심사위원 전용 로그인 및 인증 시스템",
      "출품작 리스트 및 상세 보기 제공",
      "다단계 평가 기준(창의성, 완성도 등)에 따른 점수 입력 기능",
      "평가 상태 저장 및 제출 기능",
      "심사 결과 자동 집계 및 통계 제공"
    ],
    "contribution": {
      "design": [
        "심사 진행 흐름을 고려한 UX 설계 및 화면 구성",
        "복수 항목 평가 UI 구성 (점수, 의견 텍스트 입력 등)"
      ],
      "development": [
        "심사위원 전용 페이지 구현 및 사용자 인증 기능 개발",
        "출품작별 상세 평가 및 점수 입력 기능 구현",
        "심사 기준을 기준으로 한 자동 점수 계산 로직 구축",
        "심사 결과 실시간 반영 및 관리자 페이지 연동 처리"
      ],
      "optimization": [
        "최적화된 라우팅 및 비동기 처리로 사용자 응답속도 개선",
        "다양한 브라우저 및 디바이스에서 호환성 검증"
      ]
    },
    "mainImg": "/images/spt_simsa_main.png",
    "mockupImg": "/images/spt_simsa_mockup.png",
    "year": 2024,
    "state": "완료"
  },
  {
    "category": "SideProject",
    "path": "netflex",
    "id": 5,
    "title": "넷플릭스 클론 코딩",
    "description": "React, React-Query, TMDB API를 이용해 넷플릭시를 클론코딩을 한 사이드 프로젝트입니다.",
    "tech_stack": {
      "frontend": ["React", "React-Query", "Recoil", "Styled-Components"]
    },
    "features": [
      "TMDB API 연동을 통한 영화/TV 프로그램 데이터 조회",
      "메인 화면 배너 및 인기/추천 콘텐츠 섹션 구성",
      "상세 페이지에서 줄거리, 평점, 예고편 제공",
      "Recoil을 이용한 상태관리 및 모달 UI 구현"
    ],
    "contribution": {
      "design": [
        "넷플릭스 UI/UX를 참고하여 반응형 레이아웃 설계",
        "메인/상세 페이지 와이어프레임 및 사용자 흐름 정의"
      ],
      "development": [
        "React-Query를 활용한 비동기 API 데이터 관리",
        "영화/TV 프로그램 리스트 및 상세 페이지 구현",
        "Recoil을 이용해 모달 창 및 전역 상태 관리",
        "Styled-Components를 활용한 컴포넌트 단위 스타일링"
      ],
      "optimization": [
        "React-Query 캐싱 기능으로 API 호출 최적화",
        "반응형 UI 적용으로 다양한 기기 해상도 대응"
      ]
    },
    "mainImg": "/images/netflex_main.png",
    "mockupImg": "/images/netflex_mockup.png",
    "year": 2024,
    "state": "완료"
  },
  {
    "category": "SideProject",
    "path": "carrot",
    "id": 6,
    "title": "당근마켓 클론 코딩",
    "description": "React, React-Query, Firebase를 이용해 당근마켓(중고거래 플랫폼)을 클론 코딩한 사이드 프로젝트입니다.",
    "tech_stack": {
      "frontend": ["React", "React-Query", "Recoil", "Styled-Components"],
      "backend": ["Firebase Authentication", "Firebase Firestore", "Firebase Storage"]
    },
    "features": [
      "사용자 회원가입/로그인 (Firebase Authentication)",
      "동네 설정 및 위치 기반 상품 리스트 조회",
      "상품 등록/수정/삭제 기능 (이미지 업로드 포함)",
      "채팅을 통한 실시간 거래 소통",
      "마이페이지에서 등록 상품 및 거래 내역 관리"
    ],
    "contribution": {
      "design": [
        "당근마켓 UI/UX를 참고하여 모바일 중심의 반응형 레이아웃 설계",
        "상품 리스트/상세/채팅/마이페이지 화면 와이어프레임 정의"
      ],
      "development": [
        "Firebase Authentication을 활용한 사용자 로그인/회원가입 구현",
        "Firestore 연동을 통한 상품 CRUD 및 실시간 데이터 반영",
        "Firebase Storage를 통한 상품 이미지 업로드 기능 개발",
        "Recoil을 이용해 사용자 상태 및 채팅방 전역 관리",
        "Styled-Components로 컴포넌트 단위 스타일링"
      ],
      "optimization": [
        "React-Query 캐싱을 통한 상품 데이터 요청 최적화",
        "모바일 기기에서도 원활한 UX를 위한 반응형 UI 적용"
      ]
    },
    "mainImg": "/images/carrot_main.png",
    "mockupImg": "/images/carrot_mockup.png",
    "year": 2023,
    "state": "완료"
  },
  {
    "category": "ToyProject",
    "path": "todoApp",
    "id": 7,
    "title": "TodoList",
    "description": "React와 Recoil을 이용해 할 일(Todo) 관리 기능을 구현한 토이 프로젝트입니다.",
    "tech_stack": {
      "frontend": ["React", "Recoil", "Styled-Components"]
    },
    "features": [
      "할 일 추가/수정/삭제 기능",
      "완료 상태 체크 및 필터링 (전체 / 진행 중 / 완료)",
      "로컬 스토리지를 활용한 데이터 저장",
      "Recoil을 이용한 전역 상태 관리"
    ],
    "contribution": {
      "design": [
        "간단하고 직관적인 UI 설계",
        "모바일에서도 사용 가능한 반응형 레이아웃 적용"
      ],
      "development": [
        "React로 컴포넌트 구조화 및 CRUD 기능 구현",
        "Recoil을 활용한 전역 상태 관리",
        "Styled-Components로 모듈화된 스타일링 적용"
      ],
      "optimization": [
        "불필요한 렌더링 최소화",
        "상태 변경 시 성능 최적화"
      ]
    },
    "mainImg": "/images/todo_main.png",
    "mockupImg": "/images/todo_mockup.png",
    "year": 2025,
    "state": "완료"
  },
  {
    "category": "ToyProject",
    "path": "coin-tracker",
    "id": 8,
    "title": "Coin Tracker",
    "description": "React와 React-Query를 이용해 암호화폐 시세를 조회할 수 있는 코인 트래커 프로젝트입니다.",
    "tech_stack": {
      "frontend": ["React", "React-Query", "Recoil", "Styled-Components"]
    },
    "features": [
      "코인 리스트 조회 및 실시간 시세 확인",
      "코인 상세 페이지에서 차트 및 시세 변동 정보 제공",
      "React-Query를 통한 API 호출 및 캐싱 처리",
      "즐겨찾기한 코인 관리 기능"
    ],
    "contribution": {
      "design": [
        "차트 중심 UI 설계",
        "코인 리스트/상세 페이지 반응형 레이아웃 적용"
      ],
      "development": [
        "암호화폐 API 연동 및 데이터 비동기 처리",
        "React-Query를 활용한 캐싱 및 상태 관리",
        "Styled-Components로 컴포넌트 단위 스타일링"
      ],
      "optimization": [
        "React-Query 캐싱으로 API 요청 최소화",
        "데이터 로딩/에러 상태 처리 개선"
      ]
    },
    "mainImg": "/images/coin_main.png",
    "mockupImg": "/images/coin_mockup.png",
    "year": 2025,
    "state": "완료"
  }
]